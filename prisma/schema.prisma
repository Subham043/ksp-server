// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

enum Status {
  active
  blocked
}

enum Gender {
  Male
  Female
  Others
}

enum IsGang {
  Yes
  No
}

model User {
  id        Int      @id @default(autoincrement())
  name      String  @db.VarChar(256)
  email     String   @db.VarChar(256) @unique
  password     String   @db.VarChar(256)
  role      Role     @default(user)
  status      Status     @default(active)
  key      String? @default(uuid()) @db.VarChar(500)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  tokens Token[]
  criminalsCreated Criminal[]
  crimesCreated Crime[]

  @@unique([id, email], map: "idx_email_userkey")
  @@index([key], map: "key_userkey")
}

model Token {
  id        Int      @id @default(autoincrement())
  token  String @db.Text
  user   User? @relation(fields: [userId], references: [id], onDelete: SetNull, onUpdate: SetNull)
  userId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  @@index([token], map: "token_tokenkey")
  @@index([userId], map: "userId_tokenkey")
}

model Criminal {
  id        Int      @id @default(autoincrement())
  name      String  @db.VarChar(256)
  sex      Gender     @default(Male)
  dob     DateTime?
  permanent_address     String?   @db.Text
  present_address     String?   @db.Text
  phone      String? @db.VarChar(256)
  aadhar_no      String? @db.VarChar(256)
  aadhar_photo      String? @db.VarChar(256)
  photo      String? @db.VarChar(256)
  father_name      String? @db.VarChar(256)
  mother_name      String? @db.VarChar(256)
  spouse_name      String? @db.VarChar(256)
  religion      String? @db.VarChar(256)
  caste      String? @db.VarChar(256)
  fpb_sl_no      String? @db.VarChar(256)
  fpb_classn_no      String? @db.VarChar(256)
  occupation      String? @db.VarChar(256)
  educational_qualification      String? @db.VarChar(256)
  native_ps      String? @db.VarChar(256)
  native_district      String? @db.VarChar(256)
  voice      String? @db.Text
  build      String? @db.Text
  complexion      String? @db.Text
  teeth      String? @db.Text
  hair      String? @db.Text
  eyes      String? @db.Text
  habbits      String? @db.Text
  burnMarks      String? @db.Text
  tattoo      String? @db.Text
  mole      String? @db.Text
  scar      String? @db.Text
  leucoderma      String? @db.Text
  faceHead      String? @db.Text
  otherPartsBody      String? @db.Text
  dressUsed      String? @db.Text
  beard      String? @db.Text
  face      String? @db.Text
  moustache      String? @db.Text
  nose      String? @db.Text
  createdBy   User? @relation(fields: [userId], references: [id], onDelete: SetNull, onUpdate: SetNull)
  userId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  crimes CrimesByCriminals[]
  courtDetails CourtDetail[]
  jailDetails JailDetail[]

  @@unique([id, aadhar_no], map: "idx_aadhar_criminalkey")
}

model Crime {
  id        Int      @id @default(autoincrement())
  mobFileNo      String? @db.VarChar(256)
  hsNo      String? @db.VarChar(256)
  hsOpeningDate     DateTime?
  hsClosingDate     DateTime?
  typeOfCrime      String  @db.VarChar(256)
  sectionOfLaw      String  @db.VarChar(256)
  aliases      String? @db.Text
  ageWhileOpening      String?  @db.VarChar(256)
  crimeGroup      String?  @db.VarChar(256)
  crimeHead      String?  @db.VarChar(256)
  crimeClass      String?  @db.VarChar(256)
  briefFact      String? @db.Text
  cluesLeft      String? @db.Text
  languagesKnown      String? @db.Text
  languagesUsed      String? @db.Text
  placeAttacked      String? @db.Text
  placeOfAssemblyAfterOffence      String? @db.Text
  placeOfAssemblyBeforeOffence      String? @db.Text
  propertiesAttacked      String? @db.Text
  styleAssumed      String? @db.Text
  toolsUsed      String? @db.Text
  tradeMarks      String? @db.Text
  transportUsedAfter      String? @db.Text
  transportUsedBefore      String? @db.Text
  gang      IsGang     @default(No)
  gangStrength      String?  @db.VarChar(256)
  createdBy   User? @relation(fields: [userId], references: [id], onDelete: SetNull, onUpdate: SetNull)
  userId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  criminals CrimesByCriminals[]
  courtDetails CourtDetail[]
  jailDetails JailDetail[]
}

model CrimesByCriminals {
  crime Crime @relation(fields: [crimeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  crimeId Int
  criminal Criminal @relation(fields: [criminalId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  criminalId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  @@id([crimeId, criminalId])
  @@unique([crimeId, criminalId], map: "idx_criminal_crimekey")
}

model CourtDetail {
  id        Int      @id @default(autoincrement())
  courtName      String  @db.VarChar(256)
  ccScNo      String?  @db.VarChar(256)
  psName      String?  @db.VarChar(256)
  hearingDate     DateTime?
  nextHearingDate     DateTime?
  attendance      String?  @db.VarChar(256)
  lawyerName      String?  @db.VarChar(256)
  lawyerContact      String?  @db.VarChar(256)
  suretyProviderDetail      String?  @db.VarChar(256)
  suretyProviderContact      String?  @db.VarChar(256)
  stageOfCase      String?  @db.VarChar(256)
  additionalRemarks     String?   @db.Text
  accused   Criminal? @relation(fields: [criminalId], references: [id], onDelete: SetNull, onUpdate: SetNull)
  criminalId Int?
  crime   Crime? @relation(fields: [crimeId], references: [id], onDelete: SetNull, onUpdate: SetNull)
  crimeId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model JailDetail {
  id        Int      @id @default(autoincrement())
  lawSection      String?  @db.VarChar(256)
  policeStation      String?  @db.VarChar(256)
  jailEntryDate     DateTime?
  jailReleaseDate     DateTime?
  utpNo      String?  @db.VarChar(256)
  jailVisitorDetail      String?  @db.VarChar(256)
  visitorRelationship      String?  @db.VarChar(256)
  additionalRemarks     String?   @db.Text
  accused   Criminal? @relation(fields: [criminalId], references: [id], onDelete: SetNull, onUpdate: SetNull)
  criminalId Int?
  crime   Crime? @relation(fields: [crimeId], references: [id], onDelete: SetNull, onUpdate: SetNull)
  crimeId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}